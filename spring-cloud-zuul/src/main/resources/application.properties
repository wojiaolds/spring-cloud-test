
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26



spring.application.name=zuul-server
server.port=8888

spring.cloud.consul.host=127.0.0.1
spring.cloud.consul.port=8500
#设置不需要注册到 consul 中
spring.cloud.consul.discovery.register=false

## 路由规则
## 传统路由配置：不依赖服务发现。
## 所有以myapi开头的url路由至http://127.0.0.1:2000/下
## 如http://127.0.0.1:8888/myapi/hello --> http://127.0.0.1:8503/hello
zuul.routes.myApi.path=/myapi/**
zuul.routes.myApi.url=http://127.0.0.1:8503

#forward模式 直接转发至zuul提供的rest服务
zuul.routes.myDemo.path=/myDemo/**
zuul.routes.myDemo.url=forward:/demo

## 服务发现模式
# 路由地址
zuul.routes.consul.path=/consul/**
#为具体服务的名称
zuul.routes.consul.service-id=service-producer


## 停用默认的异常处理器SendErrorFilter
zuul.SendErrorFilter.error.disable=true

#zuul控制全局回退异常导致其它路由(服务)无法返回连接超时异常信息
##设置调用者等待命令执行得超时限制,超过此时间,hystrixCommand被标记未TIMEOUT,并执行回退逻辑
##默认值1000 毫秒=1秒
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=6000
##ribbon 超时时间配置 以毫秒为单位
##正常情况下，当客户端向服务器端发送请求时,如果网络很差,就会无法响应内容,这里可以设置为1分钟,如果1分钟访问不到则抛出超时异常
##这个指建立连接所用的时间,适应于网络正常情况下，如果1分钟未建立连接,抛出异常
#
#ribbon.ReadTimeout=60000
#ribbon.ConnectTimeout=60000
##这个表示在响应非正常情况时,表示开启重试机制,
#spring.cloud.loadbalancer.retry.enabled=true

